// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(cuid())
  name          String
  email         String  @unique
  image         String?
  walletAddress String? @unique

  isVerified Boolean @default(false)
  isActive   Boolean @default(true)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime @default(now())
  Quiz        Quiz[]

  @@map("hosts")
}

model Quiz {
  id              String   @id @default(cuid())
  title           String
  description     String?
  theme           Template @default(CLASSIC)
  participantCode String   @unique
  spectatorCode   String   @unique

  prizePool Float // Maybe in lamports -> then Number
  currency  String @default("SOL")

  basePointsPerQuestion Int     @default(100)
  pointsMultiplier      Float   @default(1.2)
  timeBonus             Boolean @default(true)

  eliminationThreshold Float @default(0.5)

  questionTimeLimit     Int            @default(30)
  breakBetweenQuestions Int            @default(5)
  status                QuizStatus     @default(CREATED)
  interactions          Interactions[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  scheduledAt DateTime?
  startedAt   DateTime?
  endedAt     DateTime?

  hostId    String
  host      User       @relation(fields: [hostId], references: [id], onDelete: Cascade)
  questions Question[]

  @@map("quizzes")
}

model Question {
  id            String   @id @default(cuid())
  question      String
  options       String[]
  correctAnswer Int
  explanation   String?

  difficulty Int @default(1)
  basePoints Int @default(100)
  timeLimit  Int @default(30) // these will be in seconds

  orderIndex Int
  imageUrl   String?

  quizId String
  quiz   Quiz   @relation(fields: [quizId], references: [id], onDelete: Cascade)
}

enum QuizStatus {
  CREATED
  SCHEDULED
  LIVE
  COMPLETED
  CANCELLED
  PAYOUT_PENDING
  PAYOUT_COMPLETED
}

enum Template {
  CLASSIC
  MODERN
  PASTEL
  NEON
  YELLOW
  GREEN
  BLUE
}

enum Interactions {
  THUMBS_UP
  DOLLAR
  BULB
  HEART
  SMILE
}
